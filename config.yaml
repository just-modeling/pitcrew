hub:
  cookieSecret: 98a089a34637d725efa49d780b2d324428211a81a51a30913985793507f086d8
  # db:
  #   type: postgres
  #   url: postgres+psycopg2://mphhubadmin@mphhubdbs1:Simple123!@mphhubdbs1.postgres.database.azure.com:5432/hhs_hub
  #   upgrade: true
  extraEnv:
    AAD_TENANT_ID: "50225b46-8a5b-4a27-b140-349ac9c7b83c"
  image: 
    name: ddapracr.azurecr.io/k8s-hub
    tag: latest
  imagePullPolicy: 'Always'
  nodeSelector:
    agentpool: userpool
  extraConfig:
    jupyterlab: |
      c.JupyterHub.authenticator_class = 'dummyauthenticator.DummyAuthenticator'
      c.KubeSpawner.start_timeout = 3600
    admin_user: |
      c.JupyterHub.admin_access = True
      c.Authenticator.admin_users = {'apiuser','ziang'}
      c.JupyterHub.api_tokens = {'97bbf5d910d0c6d06be880441633953445f6965a78d25b54694f5e26374ffc6a': 'apiuser'}
    spawner: |
      from kubespawner import KubeSpawner
      from jinja2 import Environment, BaseLoader
      class CustomKubeSpawner(KubeSpawner):
          async def options_form(self, spawner):
              projects = [
                {
                  'image': 'ddapracr.azurecr.io/novnc-notebook:latest',
                  'display_name': 'Linux Virtual Desktop',
                  'description':'K8s NOVNC Desktop Spawner',
                }
              ]
              p_list = []
              default = True
              for p in projects:
                  pull_policy = 'Always'
                  lifecycle_hooks = {}
                  # construct the project space list
                  p_list.append(
                      {'display_name':p['display_name'],'description': p['description'], 'default': default,
                       'kubespawner_override': 
                         {
                              'image': p['image'],
                              'cmd': ['startup'],
                              'image_pull_policy': pull_policy,
                              'cpu_limit': 2,
                              'cpu_guarantee': 0.5,
                              'mem_limit': '4G',
                              'mem_guarantee': '2G',
                              'volumes': [
                                {'name': 'project-claim','persistentVolumeClaim': {'claimName': 'pvc-test-jhub-project'}},
                                {'name': 'user-claim','persistentVolumeClaim': {'claimName': 'pvc-test-jhub-user'}},
                              ],
                              'volume_mounts': [
                                {'name': 'project-claim','mountPath': '/home/jovyan/Desktop/shared'},
                                {'name': 'user-claim','mountPath': '/home/jovyan/Desktop/work'}
                              ],
                              'singleuser_extra_pod_config': {
                                'service_account_name': 'spark-admin',
                                'automount_service_account_token': True,
                                'hostAliases': [{'ip': '127.0.0.1', 'hostnames':['jupyter.ds.ksmc.container','rstudio.ds.ksmc.container','vscode.appdev.ksmc.container','pgadmin4.de.ksmc.container','spark.ds.ksmc.container']}]
                              },
                              'lifecycle_hooks': lifecycle_hooks,
                              'extra_containers': [
                                {
                                  'name': 'jupyterlab',
                                  'image': 'ddapracr.azurecr.io/datascience-notebook:latest',
                                  'command': ['start-notebook.sh'],
                                  'image_pull_policy': pull_policy,
                                  'volume_mounts': [
                                    {'name': 'project-claim','mountPath': '/home/jovyan/shared'},
                                    {'name': 'user-claim','mountPath': '/home/jovyan/work'}
                                  ],
                                },
                                {
                                  'name': 'rstudio',
                                  'image': 'ddapracr.azurecr.io/rstudio:latest',
                                  'image_pull_policy': pull_policy,
                                  'volume_mounts': [
                                    {'name': 'project-claim','mountPath': '/home/jovyan/shared'},
                                    {'name': 'user-claim','mountPath': '/home/jovyan/work'}
                                  ],
                                },
                                {
                                  'name': 'spark',
                                  'image': 'ddapracr.azurecr.io/pyspark-notebook:v2.4.5',
                                  'command': ['start-notebook.sh'],
                                  'image_pull_policy': pull_policy,
                                  'volume_mounts': [
                                    {'name': 'project-claim','mountPath': '/home/jovyan/shared'},
                                    {'name': 'user-claim','mountPath': '/home/jovyan/work'}
                                  ],
                                  'env': [
                                    {'name': 'MY_POD_IP', 'valueFrom': { 'fieldRef' : { 'fieldPath' : 'status.podIP' } } }
                                  ]
                                },
                                {
                                  'name': 'theia-vscode',
                                  'image': 'ddapracr.azurecr.io/theia-vscode:latest',
                                  'image_pull_policy': pull_policy,
                                  'volume_mounts': [
                                    {'name': 'project-claim','mountPath': '/home/jovyan/shared'},
                                    {'name': 'user-claim','mountPath': '/home/jovyan/work'}
                                  ],
                                },
                                {
                                  'name': 'pgadmin4',
                                  'image': 'ddapracr.azurecr.io/pgadmin4:latest',
                                  'image_pull_policy': pull_policy,
                                  'command': ['/entrypoint.sh'],
                                  'env': [{'name':'PGADMIN_DEFAULT_EMAIL', 'value':'admin@pgadmin4.dii.hhs.info'}, 
                                          {'name':'PGADMIN_DEFAULT_PASSWORD', 'value':'admin'}, 
                                          {'name':'PGADMIN_LISTEN_PORT', 'value':'5050'},
                                          {'name':'PGADMIN_CONFIG_SERVER_MODE','value':'False'}]
                                },
                              ]
                          }
                      }
                  )
                  default = False
              self.profile_list = p_list
              self._profile_list = p_list
              profile_form_template = Environment(loader=BaseLoader).from_string(self.profile_form_template)
              return profile_form_template.render(profile_list=p_list)
      c.JupyterHub.spawner_class = CustomKubeSpawner

cull:
  enabled: true
  timeout: 3600
  every: 600
  
scheduling:
  userScheduler:
    enabled: true
  podPriority:
    enabled: true
  userPlaceholder:
    replicas: 0
  userPods:
    nodeAffinity:
      matchNodePurpose: require

prePuller:
  hook:
    enabled: true
  continuous:
    enabled: false

singleuser:
  singleuser:
    cpu:
      limit: 4
      guarantee: 0.05
    memory:
      limit: 4G
      guarantee: 512M
      
proxy:
  nodeSelector:
    agentpool: userpool
  secretToken: 98a089a34637d725efa49d780b2d324428211a81a51a30913985793507f086d8
  https:
    enabled: false